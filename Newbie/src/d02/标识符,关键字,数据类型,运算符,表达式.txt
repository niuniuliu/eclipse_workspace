1.标识符:
允许以字母,下划线和美元$符号开始
比如abc,str,$abc,a_bc
当然,也允许中文的命名


2.变量(常量)
变量的声明:
数据类型 标识符 = 值;
String s1 = "zhangsanfeng";
变量的值是可以被改变的
s1 = "zhangwuji";

变量的名称不能重复
变量的名称区分大小写
变量必须先定义再使用


3.数据类型
从整体上讲,数据类型分为两大类:基本数据类型和引用数据类型

基本数据类型之外的都被称为引用数据类型
比如String,不是基本数据类型,那就为引用类型

基本数据类型共分四大类,八个类型
逻辑型:boolean
文本型:char
整数型:byte,short,int,long
小数型(浮点型):float,double


逻辑型:boolean,只能赋值为为true或false
boolean flag = false;

文本型:char,只能为单个字符,而且必须使用单引号
比如,char c = 'a';
java语言中个别引用符号也可以使用char类型来表示,比如char c = '\t';    \n



整数数据类型共分四种
分别为byte,short,int,long
分别代表不同的表数范围
byte  1个字节   -128---127
short  2个字节  -32768----32767
int   4个字节   -2147483648---2147483647
long   8个字节  -2 63-----2 63

对于long类型的数据而言,数据的后面一定要以l或L结尾来表示其特殊性



浮点类型:
两种:单精度和双精度,都是用来表示小数类型的数据.
float:4个字节
double:8个字节


4。使用变量的注意事项
A.变量必须在使用之前被初始化,被赋值
int x;
System.out.println(x);
程序编译会报错


B.如果两个变量的数据类型相同,可以将这两个变量的声明放到一起
int x=6;
int y=9;
也可以写成:
int x=6,y=9;


5.关键字
在java语法中,有些关键字是系统保留的,不能被用来声明变量
int this = 8;      //有错误
关键字都是小写的
这些关键字是系统留下来用来特殊使用的



6。表达式
算术
逻辑
关系
赋值

7. 算术运算符
除号:/  对于整数的运算,表示取整数,比如16/5=3
取模:%  表示取整除之后的余数 16%5=1

++:递增
--:递减

这种运算符可以加在变量的前面,也可以在变量的后面
表达的意义不同
int i= 8;
i++;
++i;
在前面,表示先运算,再+1;
在前面,表示先+1,再运算
//i++表示执行到该条语句时,先提取该变量的值,待该条语句运行完毕后,再执行+1的操作
System.out.println(i++);//1.先打印  2.打印完后再+1

int j = 8;
System.out.println(++j);//1.j = j+1  2.打印j的值

8.关系运算符
>,<,>=,<=,!=,==
其运算结果返回true或false


9.逻辑运算符
!:取反
&:逻辑与 前后两个值同时为true的时候,结果才为true
|:逻辑或 前后两个值只有有一个为true,其结果既为true
^:异或表示前后两个值不能相等,如果相等即为false
&&:短路与 表示如果前面的值为false,&&后面的值就不用运算了
||:短路或 如果前面的值为true,后面的值也不用算了


10。 赋值运算符
使用单个=来表示赋值
int n = 5;//表示把5赋给int类型的变量n

扩展运算符:
+=,-=
int m = 8;
m+=2;//m=m+2;


11.三目运算符
x?y:z
比如:
int m=9;
System.out.println(m>12?"对":"错");

12.运算优先级别
使用()可以改变运算的优先顺序问题

13.表达式
表达式:一系列有语法规则的运算符和操作数构成
比如:m>12?"对":"错"

14.if语句:条件判断
语法规则:
if(bolean类型的值true|false){
//语句体
}
如果条件的值为true,语句体中的内容将会被执行



第二种表达方式
if(){

}
else if(){

}
else if(){

}

表达的含义:如果第一个判断不满足,判断第二个,如果第二个也不满足,判断第三个
如果第一个值为true,else的内容统统跳过



第三种表达方式：if(m>5){
			System.out.println("对");
		}
		if(m<6){
			System.out.println("m<6");
		}
		if(m<5){
			System.out.println("m<5");
		}

不管第一个的值是否为false,后面的表示式都要判断


第四种表达方式：
		if(m>9){
			System.out.println("对");
		}
		else{
			System.out.println("error..........");
		}



10.switch语句的使用
开关语句,语法表现形式为:
		int n = 15;
		switch(n){//表示开关语句,当n的值和某一个case
		//后面的值相等的时候,程序从哪个地方开始往后执行
			case 5:  //case表示种情况
				System.out.println("n==5");
				break;//中断后续的代码执行，跳出switch语句块
			case 6:
				System.out.println("n==6");
				break;   
			default:
				System.out.println("nnnnnnnnnnnnn");
		}

switch语句类型:只能是以下几种类型之一:
byte,short,int,char







