1.数组概念
数组是相同数据类型的集合
int[] n = new int[5];//这里new表示创建一个数组

n为数组名称
n代表5个int的值

Date[] date = new Date[3];

数组可以是任何数据类型
我们可以声明int类型的数组,也可以声明float,short,double,long,String,char类型的数组

2.数组声明
声明方式:
int[] n;
或int n[];
更推荐第一种写法,比较直观,直接说明n是int型数组

注意:数组声明时候,不能指定其长度,比如
double[2] d;//错误


创建数组对象,创建的时候比较指定其长度
d = new double[3];


3.数组的初始化问题:
动态初始化:
在声明数组后,手工为每个元素指定一个具体的值
数组元素的定义和元素的赋值分开来
		double[] d;
		d = new double[2];//这里必须指定长度
	        d[0]=123;
		d[1]=1;



静态初始化:
在数组定义的同时,就为数组元素分配位置和具体的值
double[] d = {123,456,789};


数组元素的引用:使用下标来引用
arrayName[index];
注意:数组下标从0开始
每个数组都有一个隐含属性:length
 for(int i=0;i<d.length;i++){
	    	System.out.println(d[i]);
 }


4.多维数组:
使用多个[]表示,比如
int[][]   a = {{1,2},{3,4,0,9},{5,6,7}};
同样,也可以分为静态初始化和动态初始化



多维数组的声明,高位不能为空
int[][] k = new int[2][];//正确
int[][] k = new int[][2];//错误
int[][] k = new int[2][2];//正确
int[][] k = new int[][];//错误


5.数组拷贝
System类中有一个方法,arrayCopy方法,实现两个匹配类型的数组的元素拷贝
int[] a = {1,2,3,4,5,6};
int[] b = {101,102,103,104,105,106};
System.arraycopy(a,2,b,0,2);
在这段代码中,实现了从数组a的第二个位置开始,拷贝2个元素到数组b中,从b数组的第0个位置开始放置


6 API

A.  Arrays类    sort()
		binarySearch()

B.  String类     getBytes("GBK");
		 split()

C.  Random类     Random random = new Random();
		 random.nextInt(9);


D.  StringBuffer StringBuffer buffer = new StringBuffer();
		 buffer.append("asd");

		buffer.insert(0,"asd");

		buffer.delete(0,3);

  比较String
      StringBuffer
      StringBuilder





























